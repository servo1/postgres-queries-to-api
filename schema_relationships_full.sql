-- View: public.v_defrels

-- DROP VIEW public.v_defrels;

CREATE OR REPLACE VIEW public.v_defrels AS 
 SELECT ns1.nspname AS table_schema,
    tab.relname AS table_name,
    column_info.cols AS columns,
    ns2.nspname AS foreign_table_schema,
    other.relname AS foreign_table_name,
    column_info.refs AS foreign_columns
   FROM pg_constraint,
    LATERAL ( SELECT array_agg(cols.attname) AS cols,
            array_agg(cols.attnum) AS nums,
            array_agg(refs.attname) AS refs
           FROM ( SELECT unnest(pg_constraint.conkey) AS col,
                    unnest(pg_constraint.confkey) AS ref) k,
            LATERAL ( SELECT pg_attribute.attrelid,
                    pg_attribute.attname,
                    pg_attribute.atttypid,
                    pg_attribute.attstattarget,
                    pg_attribute.attlen,
                    pg_attribute.attnum,
                    pg_attribute.attndims,
                    pg_attribute.attcacheoff,
                    pg_attribute.atttypmod,
                    pg_attribute.attbyval,
                    pg_attribute.attstorage,
                    pg_attribute.attalign,
                    pg_attribute.attnotnull,
                    pg_attribute.atthasdef,
                    pg_attribute.attisdropped,
                    pg_attribute.attislocal,
                    pg_attribute.attinhcount,
                    pg_attribute.attcollation,
                    pg_attribute.attacl,
                    pg_attribute.attoptions,
                    pg_attribute.attfdwoptions
                   FROM pg_attribute
                  WHERE pg_attribute.attrelid = pg_constraint.conrelid AND pg_attribute.attnum = k.col) cols,
            LATERAL ( SELECT pg_attribute.attrelid,
                    pg_attribute.attname,
                    pg_attribute.atttypid,
                    pg_attribute.attstattarget,
                    pg_attribute.attlen,
                    pg_attribute.attnum,
                    pg_attribute.attndims,
                    pg_attribute.attcacheoff,
                    pg_attribute.atttypmod,
                    pg_attribute.attbyval,
                    pg_attribute.attstorage,
                    pg_attribute.attalign,
                    pg_attribute.attnotnull,
                    pg_attribute.atthasdef,
                    pg_attribute.attisdropped,
                    pg_attribute.attislocal,
                    pg_attribute.attinhcount,
                    pg_attribute.attcollation,
                    pg_attribute.attacl,
                    pg_attribute.attoptions,
                    pg_attribute.attfdwoptions
                   FROM pg_attribute
                  WHERE pg_attribute.attrelid = pg_constraint.confrelid AND pg_attribute.attnum = k.ref) refs) column_info,
    LATERAL ( SELECT pg_namespace.nspname,
            pg_namespace.nspowner,
            pg_namespace.nspacl
           FROM pg_namespace
          WHERE pg_namespace.oid = pg_constraint.connamespace) ns1,
    LATERAL ( SELECT pg_class.relname,
            pg_class.relnamespace,
            pg_class.reltype,
            pg_class.reloftype,
            pg_class.relowner,
            pg_class.relam,
            pg_class.relfilenode,
            pg_class.reltablespace,
            pg_class.relpages,
            pg_class.reltuples,
            pg_class.relallvisible,
            pg_class.reltoastrelid,
            pg_class.relhasindex,
            pg_class.relisshared,
            pg_class.relpersistence,
            pg_class.relkind,
            pg_class.relnatts,
            pg_class.relchecks,
            pg_class.relhasoids,
            pg_class.relhaspkey,
            pg_class.relhasrules,
            pg_class.relhastriggers,
            pg_class.relhassubclass,
            pg_class.relrowsecurity,
            pg_class.relforcerowsecurity,
            pg_class.relispopulated,
            pg_class.relreplident,
            pg_class.relfrozenxid,
            pg_class.relminmxid,
            pg_class.relacl,
            pg_class.reloptions
           FROM pg_class
          WHERE pg_class.oid = pg_constraint.conrelid) tab,
    LATERAL ( SELECT pg_class.relname,
            pg_class.relnamespace,
            pg_class.reltype,
            pg_class.reloftype,
            pg_class.relowner,
            pg_class.relam,
            pg_class.relfilenode,
            pg_class.reltablespace,
            pg_class.relpages,
            pg_class.reltuples,
            pg_class.relallvisible,
            pg_class.reltoastrelid,
            pg_class.relhasindex,
            pg_class.relisshared,
            pg_class.relpersistence,
            pg_class.relkind,
            pg_class.relnatts,
            pg_class.relchecks,
            pg_class.relhasoids,
            pg_class.relhaspkey,
            pg_class.relhasrules,
            pg_class.relhastriggers,
            pg_class.relhassubclass,
            pg_class.relrowsecurity,
            pg_class.relforcerowsecurity,
            pg_class.relispopulated,
            pg_class.relreplident,
            pg_class.relfrozenxid,
            pg_class.relminmxid,
            pg_class.relacl,
            pg_class.reloptions
           FROM pg_class
          WHERE pg_class.oid = pg_constraint.confrelid) other,
    LATERAL ( SELECT pg_namespace.nspname,
            pg_namespace.nspowner,
            pg_namespace.nspacl
           FROM pg_namespace
          WHERE pg_namespace.oid = other.relnamespace) ns2
  WHERE pg_constraint.confrelid <> 0::oid
  ORDER BY (ROW(pg_constraint.conrelid, column_info.nums));
